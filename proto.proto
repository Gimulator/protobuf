syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "go/api";

enum Character {
    unknownCharacter = 0;

    director = 1;
    actor = 2;
    operator = 3;
    master = 4;
}

enum Method {
    unknownMethod = 0;

	Get = 1;
	GetAll = 2;
	Put = 3;
	Delete = 4;
	DeleteAll = 5;
    Watch = 6;

	SetUserStatusUnknown = 7;
	SetUserStatusRunning = 8;
    SetUserStatusFailed = 9;

	GetActorWithID = 10;
	GetActorsWithRole = 11;
	GetAllActors = 12;
    PutResult = 13;

	ImReady = 14;
}

enum Status {
    unknownStatus = 0;

    unknown = 1;
    running = 2;
    failed = 3;
};

message Key {
    string type = 1;
    string name = 2;
    string namespace = 3;
}

message Meta {
    string owner = 1;
    google.protobuf.Timestamp creationTime = 2;
    Character character = 3;
    string role = 4;
}

message Message {
    string content = 1;

    Key key = 2;
    Meta meta = 3;
}

service MessageAPI {
    rpc Get(Key) returns (Message);
    rpc GetAll(Key) returns (stream Message);
    rpc Put(Message) returns (google.protobuf.Empty);
    rpc Delete(Key) returns (google.protobuf.Empty);
    rpc DeleteAll(Key) returns (google.protobuf.Empty);
    rpc Watch(Key) returns (stream Message);
}

message ID {
    string id = 1;
}

message Role {
    string role = 1;
}

message Actor {
    string id = 1;
    string role = 2;
    bool readiness = 3;
    Status status = 4;
}

message Result {

}

service DirectorAPI {
    rpc GetActorWithID(ID) returns (Actor);
    rpc GetActorsWithRole(Role) returns (stream Actor); 
    rpc GetAllActors(google.protobuf.Empty) returns (stream Actor);
    rpc PutResult(Result) returns (google.protobuf.Empty);
}

message User {
    string id = 1;
    string token = 2;
    Character character = 3;
    string role = 4;
    bool readiness = 5;
    Status status = 6;
}

service OperatorAPI {
    rpc SetUserStatusUnknown(ID) returns (google.protobuf.Empty);
    rpc SetUserStatusRunning(ID) returns (google.protobuf.Empty);
    rpc SetUserStatusFailed(ID) returns (google.protobuf.Empty);
}

service ActorAPI {
    rpc ImReady(google.protobuf.Empty) returns (google.protobuf.Empty);
}