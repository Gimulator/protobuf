syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "go/api";

enum Character {
    unknownCharacter = 0;

    director = 1;
    actor = 2;
    operator = 3;
    master = 4;
}

enum Method {
    unknownMethod = 0;

	Get = 1;
	GetAll = 2;
	Put = 3;
	Delete = 4;
	DeleteAll = 5;
    Watch = 6;

	SetUserStatus = 10;

	GetActors = 20;
    PutResult = 21;

	ImReady = 30;
}

enum Status {
    unknownStatus = 0;

    unknown = 1;
    running = 2;
    succeeded = 3;
    failed = 4;
};

message Report {
    string name = 1;
    Status status = 2;
}

message User {
    string name = 1;
    Character character = 3;
    string role = 4;
    bool readiness = 5;
    Status status = 6;
}

message Result {
    message Score {
        string name = 1;
        string score = 2;
    }

    enum Status {
        unknown = 0;
        success = 1;
        failed = 2;
    }

    string id = 1;
    Status status = 2;
    string msg = 3;
    repeated Score score = 4;
}

message Key {
    string type = 1;
    string name = 2;
    string namespace = 3;
}

message Meta {
    User owner = 1;
    google.protobuf.Timestamp creationTime = 2;
}

message Message {
    string content = 1;

    Key key = 2;
    Meta meta = 3;
}


service MessageAPI {
    rpc Get(Key) returns (Message);
    rpc GetAll(Key) returns (stream Message);
    rpc Put(Message) returns (google.protobuf.Empty);
    rpc Delete(Key) returns (google.protobuf.Empty);
    rpc DeleteAll(Key) returns (google.protobuf.Empty);
    rpc Watch(Key) returns (stream Message);
}

service DirectorAPI {
    rpc GetActors(google.protobuf.Empty) returns (stream User);
    rpc PutResult(Result) returns (google.protobuf.Empty);
}


service OperatorAPI {
    rpc SetUserStatus(Report) returns (google.protobuf.Empty);
}

service UserAPI {
    rpc ImReady(google.protobuf.Empty) returns (google.protobuf.Empty);
}